diff --git a/node_modules/expo-modules-core/android/src/main/java/expo/modules/core/interfaces/ApplicationLifecycleListener.java b/node_modules/expo-modules-core/android/src/main/java/expo/modules/core/interfaces/ApplicationLifecycleListener.java
new file mode 100644
index 0000000..69241d3
--- /dev/null
+++ b/node_modules/expo-modules-core/android/src/main/java/expo/modules/core/interfaces/ApplicationLifecycleListener.java
@@ -0,0 +1,10 @@
+package expo.modules.core.interfaces;
+
+import android.app.Application;
+import android.content.res.Configuration;
+
+public interface ApplicationLifecycleListener {
+  default void onCreate(Application application) {}
+
+  default void onConfigurationChanged(Configuration newConfig) {}
+}
diff --git a/node_modules/expo-modules-core/android/src/main/java/expo/modules/core/interfaces/ApplicationLifecycleListener.kt b/node_modules/expo-modules-core/android/src/main/java/expo/modules/core/interfaces/ApplicationLifecycleListener.kt
deleted file mode 100644
index e908e3e..0000000
--- a/node_modules/expo-modules-core/android/src/main/java/expo/modules/core/interfaces/ApplicationLifecycleListener.kt
+++ /dev/null
@@ -1,9 +0,0 @@
-package expo.modules.core.interfaces
-
-import android.app.Application
-import android.content.res.Configuration
-
-interface ApplicationLifecycleListener {
-  fun onCreate(application: Application) {}
-  fun onConfigurationChanged(newConfig: Configuration) {}
-}
diff --git a/node_modules/expo-modules-core/android/src/main/java/expo/modules/core/interfaces/ReactActivityLifecycleListener.java b/node_modules/expo-modules-core/android/src/main/java/expo/modules/core/interfaces/ReactActivityLifecycleListener.java
new file mode 100644
index 0000000..98ce305
--- /dev/null
+++ b/node_modules/expo-modules-core/android/src/main/java/expo/modules/core/interfaces/ReactActivityLifecycleListener.java
@@ -0,0 +1,14 @@
+package expo.modules.core.interfaces;
+
+import android.app.Activity;
+import android.os.Bundle;
+
+public interface ReactActivityLifecycleListener {
+  default void onCreate(Activity activity, Bundle savedInstanceState) {}
+
+  default void onResume(Activity activity) {}
+
+  default void onPause(Activity activity) {}
+
+  default void onDestroy(Activity activity) {}
+}
diff --git a/node_modules/expo-modules-core/android/src/main/java/expo/modules/core/interfaces/ReactActivityLifecycleListener.kt b/node_modules/expo-modules-core/android/src/main/java/expo/modules/core/interfaces/ReactActivityLifecycleListener.kt
deleted file mode 100644
index c371895..0000000
--- a/node_modules/expo-modules-core/android/src/main/java/expo/modules/core/interfaces/ReactActivityLifecycleListener.kt
+++ /dev/null
@@ -1,11 +0,0 @@
-package expo.modules.core.interfaces
-
-import android.app.Activity
-import android.os.Bundle
-
-interface ReactActivityLifecycleListener {
-  fun onCreate(activity: Activity, savedInstanceState: Bundle?) {}
-  fun onResume(activity: Activity) {}
-  fun onPause(activity: Activity) {}
-  fun onDestroy(activity: Activity) {}
-}
diff --git a/node_modules/expo-modules-core/android/src/main/java/expo/modules/core/interfaces/ReactNativeHostHandler.kt b/node_modules/expo-modules-core/android/src/main/java/expo/modules/core/interfaces/ReactNativeHostHandler.java
similarity index 57%
rename from node_modules/expo-modules-core/android/src/main/java/expo/modules/core/interfaces/ReactNativeHostHandler.kt
rename to node_modules/expo-modules-core/android/src/main/java/expo/modules/core/interfaces/ReactNativeHostHandler.java
index 4215d1d..746a6d3 100644
--- a/node_modules/expo-modules-core/android/src/main/java/expo/modules/core/interfaces/ReactNativeHostHandler.kt
+++ b/node_modules/expo-modules-core/android/src/main/java/expo/modules/core/interfaces/ReactNativeHostHandler.java
@@ -1,18 +1,21 @@
-package expo.modules.core.interfaces
+package expo.modules.core.interfaces;
 
-import com.facebook.react.ReactInstanceManager
-import com.facebook.react.bridge.JavaScriptContextHolder
-import com.facebook.react.bridge.ReactApplicationContext
+import com.facebook.react.ReactInstanceManager;
+import com.facebook.react.bridge.JavaScriptContextHolder;
+import com.facebook.react.bridge.ReactApplicationContext;
 
-interface ReactNativeHostHandler {
+import androidx.annotation.Nullable;
+
+public interface ReactNativeHostHandler {
   /**
    * Given chance for modules to customize {@link ReactInstanceManager}
    *
    * @param useDeveloperSupport true if {@link ReactNativeHost} enabled developer support
    * @return instance of {@link ReactInstanceManager}, or null if not to override
    */
-  fun createReactInstanceManager(useDeveloperSupport: Boolean): ReactInstanceManager? {
-    return null
+  @Nullable
+  default ReactInstanceManager createReactInstanceManager(boolean useDeveloperSupport) {
+    return null;
   }
 
   /**
@@ -22,8 +25,9 @@ interface ReactNativeHostHandler {
    * @param useDeveloperSupport true if {@link ReactNativeHost} enabled developer support
    * @return custom path to bundle file, or null if not to override
    */
-  fun getJSBundleFile(useDeveloperSupport: Boolean): String? {
-    return null
+  @Nullable
+  default String getJSBundleFile(boolean useDeveloperSupport) {
+    return null;
   }
 
   /**
@@ -33,8 +37,9 @@ interface ReactNativeHostHandler {
    * @param useDeveloperSupport true if {@link ReactNativeHost} enabled developer support
    * @return custom bundle asset name, or null if not to override
    */
-  fun getBundleAssetName(useDeveloperSupport: Boolean): String? {
-    return null
+  @Nullable
+  default String getBundleAssetName(boolean useDeveloperSupport) {
+    return null;
   }
 
   /**
@@ -42,10 +47,10 @@ interface ReactNativeHostHandler {
    *
    * @param useDeveloperSupport true if {@link ReactNativeHost} enabled developer support
    */
-  fun onRegisterJSIModules(
-    reactApplicationContext: ReactApplicationContext,
-    jsContext: JavaScriptContextHolder,
-    useDeveloperSupport: Boolean
+  default void onRegisterJSIModules(
+    ReactApplicationContext reactApplicationContext,
+    JavaScriptContextHolder jsContext,
+    boolean useDeveloperSupport
   ) {
   }
 }
